from amc_parser.motion import MotionCapture
from pathlib import Path

MOCAP_PATH = Path(__file__).parent.parent / 'mocap'


__walk_trials = {
    2: [1, 2],
    5: [1],
    6: [1],
    7: range(1, 13),
    8: range(1, 12),
    10: [4],
    12: [1, 2, 3],
}

# Generated by test_train.ipynb
__walk_trials_train = {8: [3, 2, 5, 7, 10, 1], 7: [4, 2, 6, 8]}
__walk_trials_test = {2: [1, 2], 5: [1], 6: [1], 7: [1, 3, 5, 7, 9, 10, 11, 12], 8: [4, 6, 8, 9, 11], 10: [4], 12: [1, 2, 3]}


__run_trials = {
    2: [3],
    9: range(1, 12),
    16: [35, 36, 45, 46, 55, 56],
    35: range(17, 26),
}

# Generated by test_train.ipynb
__run_trials_train = {9: [11, 6, 8, 4, 7], 2: [3], 16: [56], 35: [25, 24]}
__run_trials_test = {9: [1, 2, 3, 5, 9, 10], 16: [35, 36, 45, 46, 55], 35: [17, 18, 19, 20, 21, 22, 23]}

def __get_path_amc(subject, trial):
    subject = str(subject).zfill(2)
    trial = str(trial).zfill(2)

    return MOCAP_PATH / 'subjects' / subject / f'{subject}_{trial}.amc'

def __get_path_asf(subject):
    subject = str(subject).zfill(2)
    return MOCAP_PATH / 'subjects' / subject / f'{subject}.asf'


def __get_mocaps(trials: dict) -> list[MotionCapture]:
    mocaps = []
    for subject, trials in trials.items():

        for trial in trials:
            asf_path = __get_path_asf(subject)
            amc_path = __get_path_amc(subject, trial)
            mocaps.append(MotionCapture(asf_path=asf_path, amc_path=amc_path, fps=120, subject=subject, trial=trial))

    return mocaps



WALK_TRIALS = __get_mocaps(__walk_trials)
WALK_TRIALS_TRAIN = __get_mocaps(__walk_trials_train)
WALK_TRIALS_TEST = __get_mocaps(__walk_trials_test)

RUN_TRIALS = __get_mocaps(__run_trials)
RUN_TRIALS_TRAIN = __get_mocaps(__run_trials_train)
RUN_TRIALS_TEST = __get_mocaps(__run_trials_test)



